{"version":3,"sources":["components/Layout.js","components/Output.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","handleClick","e","setState","value","state","target","name","clicked","clear","calculate","eval","className","this","onClick","Component","Output","style","padding","textAlign","Calculator","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"60CAIMA,O,4aACF,gBAAYC,OAAQ,IAAD,uNACf,uBAAMA,OADS,MASnBC,YAAc,SAACC,GACX,MAAKC,SAAS,CACVC,MAAO,MAAKC,MAAMD,OAASF,EAAEI,OAAOC,KACpCC,SAAS,KAZE,MAiBnBC,MAAQ,WACJ,MAAKN,SAAS,CACVC,MAAO,MAnBI,MAuBnBM,UAAY,WAER,MAAKP,SAAS,CACVC,MAAOO,KAAK,MAAKN,MAAMD,OACvBI,SAAS,IACV,WACC,MAAKH,MAAMD,MAAQ,OA3BvB,MAAKC,MAAQ,CACTD,MAAO,GACPI,SAAS,GAJE,M,wOAiCT,IAAD,OACL,OAEI,kEAAKI,UAAU,aACX,2DAAC,uCAAD,CAAQR,MAAOS,KAAKR,MAAMD,QAC1B,kEAAKQ,UAAU,OACX,qEAAQA,UAAU,OAAOL,KAAK,KAAKO,QAAS,kBAAM,EAAKL,UAAvD,MACA,qEAAQG,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,MAEJ,kEAAKW,UAAU,OACX,qEAAQA,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,MAEJ,kEAAKW,UAAU,OACX,qEAAQA,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,MAEJ,kEAAKW,UAAU,OACX,qEAAQA,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,MAEJ,kEAAKW,UAAU,OACX,qEAAQA,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKZ,aAAhD,KACA,qEAAQW,UAAU,OAAOL,KAAK,IAAIO,QAASD,KAAKH,WAAhD,W,QA/DCK,8CAuENhB,8B,6BC3Ef,oBAMeiB,IAJf,SAAgBhB,GACZ,OAAO,wBAAIiB,MAAO,CAACC,QAAS,MAAOC,UAAW,UAA2B,KAAhBnB,EAAMI,MAAe,EAAIJ,EAAMI,S,kKCc7EgB,E,kDAbX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,GAFE,E,qDAKf,OACI,6BACI,kBAACN,EAAA,EAAD,W,GARSgB,aCQVM,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4b6fdd04.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Output from './Output';\r\nimport '../css/Layout.css';\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            value: \"\",\r\n            clicked: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({\r\n            value: this.state.value += e.target.name,\r\n            clicked: false,\r\n        });\r\n\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({\r\n            value: \"\",\r\n        })\r\n    }\r\n\r\n    calculate = () => {\r\n\r\n        this.setState({\r\n            value: eval(this.state.value),\r\n            clicked: true,\r\n        }, () => {\r\n            this.state.value = \"\";\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return (\r\n             \r\n            <div className=\"container\">\r\n                <Output value={this.state.value}/>\r\n                <div className=\"row\">\r\n                    <button className=\"item\" name=\"AC\" onClick={() => this.clear()}>AC</button>\r\n                    <button className=\"item\" name=\"/\" onClick={this.handleClick}>/</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button className=\"item\" name=\"1\" onClick={this.handleClick}>1</button>\r\n                    <button className=\"item\" name=\"2\" onClick={this.handleClick}>2</button>\r\n                    <button className=\"item\" name=\"3\" onClick={this.handleClick}>3</button>\r\n                    <button className=\"item\" name=\"*\" onClick={this.handleClick}>*</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button className=\"item\" name=\"4\" onClick={this.handleClick}>4</button>\r\n                    <button className=\"item\" name=\"5\" onClick={this.handleClick}>5</button>\r\n                    <button className=\"item\" name=\"6\" onClick={this.handleClick}>6</button>\r\n                    <button className=\"item\" name=\"-\" onClick={this.handleClick}>-</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button className=\"item\" name=\"7\" onClick={this.handleClick}>7</button>\r\n                    <button className=\"item\" name=\"8\" onClick={this.handleClick}>8</button>\r\n                    <button className=\"item\" name=\"9\" onClick={this.handleClick}>9</button>\r\n                    <button className=\"item\" name=\"+\" onClick={this.handleClick}>+</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button className=\"item\" name=\"0\" onClick={this.handleClick}>0</button>\r\n                    <button className=\"item\" name=\"=\" onClick={this.calculate}>=</button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Layout;","import React from 'react';\r\n\r\nfunction Output(props) {\r\n    return <h1 style={{padding: \"5px\", textAlign: \"right\"}}>{props.value === \"\" ? 0 : props.value}</h1>;\r\n}\r\n\r\nexport default Output;","import React, { Component } from 'react';\r\nimport Layout from './Layout'\r\n\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (  \r\n            <div>\r\n                <Layout />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Calculator;","import React from 'react';\nimport Calculator from './components/Calculator';\n\nfunction App() {\n  return (\n    <div>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}